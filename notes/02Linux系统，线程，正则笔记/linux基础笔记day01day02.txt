环境虚拟化:
	CPU开启虚拟化(BIOS 百度机型是哪个快捷键进入) V* Tech*-enabled
	F2 F8 F10 F数字键 是橙色  键  同时按Fn

UNIX/LINUX everything is file
	一切皆文件
	设备 目录 文件




0，Linux 的命令的基本格式是：command [-options] [parameter] ...
0，man是linux提供的一个手册，包含了绝大部分的命令、函数使用说明
0，一般是linux命令自带的帮助信息
            如：ls --help
0， 使用man查看rm的作用
    答：man ls，   然后：/rm



 1， 主目录
   用户资源所在的目录
    python

  /home/python/
  表示当前用户的主目录~   也就是家目录
 
  root用户是UNIX/LINUX 权限最高的用户
     该权限可以做任何事情
  UBUNTU限制root用户的使用

2目录介绍
  / 根目录
  xxxx/bin 二进制程序 可执行程序所在的目录
 
3，命令行使用技巧
  Ctrl + （Ctrl+shift + =） 放大
 Ctrl - 缩小
 Ctrl l == clear 清屏
 Ctrl c 终止当前程序
 Tab键 自动补齐
  

4，ls命令 默认显示当前目录下的所有的非隐藏文件和文件夹

   ls -a  显示当前目录下所有的文件和文件夹
          .开始的文件是隐藏文件
         .代表当前的路径
         ..上一级路径
    ls -l 以长格式显示文件的详情
    ls -h 以人性化显示文件 通常和-l 连用，如 -lh
  
 drwxrwxr-x   2 python python   4096 10月 18 10：44 1
   d                rwx            rwx           r-x
 文件目录       所属用户user  所属用户组group   其他other
 代表普通文件
		2 代表硬链接数 
		python 文件所属用户
		python 文件所属的用户组
		4096代表文件大小 
		文件修改时间
		文件名
	ls -hl 以人类友好的方式显示文件大小

5，计算机容量单位
	bit 比特 比特位 只能存储0或者1的这个基本单元
	字节 B Byte 1Byte = 8bit
	KB MB GB 
	 进制都是1024
***
6，通配符
      *  文件代表文件名中所有字符
***      匹配任意个字符    ls *.py
***  ？：匹配一个任意字符  如果要多匹配可以多弄几个？ ls ??.py
***  ls *html ： 查找结尾为html的文件
***  ls ?.c  ：只找第一个字符任意，后缀为.c的文件
***

    查看 桌面上所有以 1 开始的文件（11.txt，123.txt）
    答：ls 1?.txt 1??.txt 或者 ls 1*
    
     查看/usr/bin目录下所有m开头的文件(文件夹)的名字
      答：ls /usr/bin/m*

6.2, 在linux中绝对路径一是从 根目录/home/python这样的格式
       使用绝对路径跳转到C文件夹中
       答：cd /home/python/Desktop/A/B/C
     ***注：Desktop在linux的路径是/home/python/Desktop
   
     相对路径是：从当前目录开始  即 如果当前是在Desktop 那么
          cd 桌面上的文件可以切换路径到里面 cd A/B/C/

6.3  显示从A文件夹开始的目录树
      答：tree A  
    ***注:A目录后面还要有很多目录 才能完整显示 ，如果A目录后面没目录那就       不是树
    **tree 也可以在目录里直接使用，显示当前整个目录的目录树，比如在   Desktop目录下直接tree


6.4  cd空格  ：切换到当前用户的主目录(/home/用户目录)，用户登陆的时候，          默认的目录就是用户的主目录。
  cd ~  ：切换到当前用户的主目录(/home/用户目录)
  cd .	：切换到当前目录
  cd .. ：切换到上级目录
  cd -  ：切换到上次所在的路径

   注意：

   如果路径是从根路径开始的，则路径的前面需要加上 “ / ”，如 “ /mnt ”  ，通常进入某个目录里的文件夹，前面不用加 “ / ”。
 

6.5，常用linux命令的基本使用
   
   ls     查看当前文件夹下的内容
   pwd    查看当前所在的文件夹（即路径）
   cd    （change directory）切换文件夹   
  touch[目录名]   如果文件不存在，创建文件
   clear     清屏
   rm[文件名]   删除指定文件     

  

7,mkdir 
 make dir 创建目录
  格式：mkdir 目录名称
      如果 一下创建多级目录
     要加 -p 选项 可以在父目录不存在的情况下创建父目录
     比如：mkdir -p code/test

*** 创建文件：touch 文件   如：touch  1.py
    如果要创建文件夹：mkdir -p 文件夹名
      
 


 
 rmdir    移除一个目录
     前提是目录为空，如果目录里有空的子目录那也不是空

  
 rm  移除
    移除目录和文件  
   * 如果无法移除  可以使用强行删除  rm -r 目录 

***cp  ：拷贝（常用选项：-a，-f，-i，-r，-v显示拷贝进度）
    cp 源文件  目标文件
    cp 1.py ..       复制到上一级目录不改名
    cp 1.py ../2.py 复制到上一级目录并改名 
   *注：复制之后是把文件复制到父类文件夹去了，如果要cat，必须要跳到父类去cat
  

      -r 强制复制目录，删除目录，移动目录-----------111---------------
      -i 执行前询问 （一般用在删除文件的时候）
      -f 执行前不询问
*** 教材上的：
     -r 递归的删除目录下的内容，删除文件夹时必须加此参数
     -i 进行交互式执行	
     -f 强制删除，忽略不存在的文件，无需提示
   
*** mv 移动，重命名  （常用选项：-f，-i，-v）
   方法：   mv 源文件  目标文件
   mv 1.py 2.py  改名
   mv 1.py ../   移动
   mv 1.py ../2.py  也可以边移动边改名
 
 cat 查看文件内容

 more 分屏显示文件内容 （用于文件内容多的情况下，翻页操作类似于man）


8，输出重定向命令：>

     cmd > file 将原本输出到终端的执行结果 保存到文件中
   
  
  ls > test.txt
  (test.txt 如果不存在，则创建，存在则覆盖其内容)
 
  >:  输出重定向会覆盖原来的内容
  >>: 输出重定向则会追加到文件的尾部
   cat f1 f2 > f3  将f1 f2 文件进行合并


9,分屏显示：more


**    wc 统计一个文件 行数 字计数
**    wc -l file_name   （wc -l ）


**管道：   cmd1 | cmd2
    将cmd1的输出当作cmd2的输入
    如果没有管道 ls /bin/ -l > a.txt 然后more a.txt   
    有管道：ls /bin/ -l | more
           
    用管道读行数： ls /bin/ -l | wc -l
    



10，管道： |
  管道：一个命令的输出可以通过管道做为另一个命令的输入。
   左端塞东西(写)，右端取东西(读)，ls -lh | more
   
**管道和重定向的区别是 最终结果一个是读出来，一个是写进去


11,建立链接文件：ln   (相当于快捷方式)
  
   软连接：链接文件不存储源文件数据，只存储一个标记（可以跨分区，但是要           使用绝对路径）
   硬链接：基于同一份文件数据，只是不同的名称而已 ls -i file（查看文件编           号）
           硬链接不可以跨分区（目录） 

   格式： ln 源文件 链接文件     硬
          ln -s 源文件 链接文件   软

    ln haha.txt haha_hardlink.txt
    ln -s haha.txt haha_softlink.txt
  ** 链接里面的内容和源文件一毛一样
 *注意：如果软链接文件和源文件不在同一个目录，源文件要使用绝对路径，不能  使用相对路径 

 **通过硬链接可以修改源文件：gedit haha_hardlink.txt  
        软连接               gedit haha_softlink.txt 

  *删除源文件，软连接将失去内容，硬链接不会
  

12，查看或者合并文件内容：cat
   cat  相对路径文件   查看
       绝对路径文件    查看
   cat test.txt test2.txt > heihei.txt  合并文件内容

    

13，文本搜索：grep
    
    grep允许对文本文件进行模式查找。如果找到匹配模式， grep打印包含模式    的所有行。
    格式：
         grep [-选项] ‘搜索内容串’文件名
         grep '2' test.txt   找到打印，注：搜索的关键字要加'' 引号
   *常用选项： 
      -v   显示不包含匹配文本的所有行（相当于求反）
     -n   显示匹配行及行号
     -i   忽略大小写
     
***正则表达式：
    正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。
  
 grep 常用的正则表达式：
  ^a   行首,搜寻以 a 开头的行；grep -n '^a' 1.txt
  ke$   行尾,搜寻以 ke 结束的行；grep -n 'ke$' 1.txt
  [Ss]igna[Ll]  匹配 [] 里中一系列字符中的一个；搜寻匹配单词signal、            signaL、Signal      、SignaL的行；grep -n '[Ss]igna[Ll]' 1.txt

  .    (点)匹配一个非换行符的字符；匹配 e 和 e 之间有任意一个字符，可以     匹配 eee，eae，eve ，但是不匹配 ee，eaae；grep -n 'e.e' 1.txt  


14,查找文件 ：find
  find命令功能非常强大，通常用来在特定的目录下搜索符合条件的文件，也可以  用来搜索特定用户属主的文件

   find ./ -name test.sh   查找当前目录下所有名为test.sh的文件
   find ./ -size +4k -size -5M  查找当前目录下大于4k，小于5M的文件
   
   find ./ -perm 0777   查找当前目录下权限为 777 的文件或目录
   find ./ -name '*.sh'  查找当前目录下所有后缀为.sh的文件
   注： 这里要加引号

****老师总结：
  文件搜索：
     grep  在指定文件中搜索指定的文件数据
         -n 显示行号  
         -v 显示不匹配的数据
        -i忽略大小写
     find  可以根据文件大小  文件名称查找文件
         -name 根据名称查找：
              find ./ -name '*.py'

         -size  根据大小查找
             find ./tmp -size 2M
             大于2M  +2M  
             小于2M  -2M
             等于2M   2M
             注意2k 小写     


***sudo cmd 表示以root权限运行（当前用户是管理员用户）


15，归档管理 ：tar

   tar是Unix/Linux中最常用的备份工具，此命令可以把一系列文件归档到一个大   文件中，也可以把档案文件解开以恢复数据
   格式：
        tar [参数] 打包文件名 文件 

*  tar常搭配的参数：
        -c	生成档案文件，创建打包文件
        -v	列出归档解档的详细过程，显示进度
        -f	指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后
        -t	列出档案中包含的文件
        -x	解开档案文件


* tar   减号可以不写
    *创建归档文件  tar -cvf 归档文件名称 打包的文件列表
      tar -cvf 1.tar 1.py 2.py

    *解开归档文件  tar -xvf 归档文件名称
       tar -xvf 1.tar

    *压缩  gzip  bzip2 压缩算法
       *z  gzip
       
           创建归档文件使用gzip压缩  tar -zcvf 压缩文件名称（tar.gz）    
           打包的文件列表
           解压并且解开归档文件  tar -zxvf 压缩文件名称（tar.gz
) 
       *j  bzip2
           创建归档文件使用bzip2压缩 tar -bcvf 压缩文件名称
           
    
      *-C  指定解压路径（目录）
            比如：tar -jxvf 2.tar.bz2 -C ~  (解压到主目录) (-C ../解压到           上级目录)
          或者 直接 -C /home/python/Desktop/   绝对路径

权限
-      rwx            rwx                r
   文件所属用户权限   文件所属组权限      其他
   user  u     group  g    other  o
    r--           r--                    r--         
  
  all 所有   表示 u g o 统称
  
  r  read读   4
  w  write写  2
  x  execute执行  1      
 
   + 增加权限
   -取消权限
   = 赋予权限


 修改权限
   chmod u-rwx,g-x，o+w 1.py   (多个修改可以用逗号分割，g-x是将用户组中的执行权限删除，o+w是将                                   其他组中的权限加上w权限)
   
  数字法设置权限
  rw-  r--  --- 
   6    4    0
  rw-   r--   ---  1 python python 73 10月 18 21:47 d.py

   7    5    1
   4+2+1 4+1  1   
   rwx   r-x  --x 
  
   chmod 777 1.txt

用户 
   sudo cmd 以root用户权限运行后面的命令
   passwd 用户名  修改制定用户的密码
  
   sudo passwd root ----以root用户权限修改root用户的密码
   su 切换用户
      su 用户 不切换当前路径 （输入密码后以root权限，运行当前路径）
      su - 用户名 切换当前路径（输入密码后以root权限，进入到root的主目录）
   exit 退出当前切换之后的用户
   whoami 查看当前用户
   who 查看当前所有登陆的用户

   添加用户 ：sudo useradd -m test（添加一个叫test的用户）

退出登录账户：exit
    如果是图形界面，退出当前终端；

    如果是使用ssh远程登录，退出登陆账户

添加用户账号：useradd
    格式：useradd [参数] 新建用户账号
   
    -d  指定用户登录系统时的主目录，如果不使用该参数，系统自动在/home目         录下建立与用户名同名目录为主目录

    -m 自动建立目录
    -g  指定组名称

    cat /etc/passwd  查看系统当前用户名

     创建一个用户名，并且创建一个用户组
       useradd -d /home/a a -g test -m     创建一个用户名字叫a，主目录             在/home/a，如果主目录不存在，就自动创建主目录，同时用户属于             test组 
     

*（了解）
安装软件：

 ftp服务器

  FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文      简称为“文传协议”。用于Internet上的控制文件的双向传输
  *图形界面的ftp客户端(filezilla)
   filezilla使用 ：链接的主机ip：**** ，用户名：python，密码：         chuanzhi  链接
   
     本机信息  -------- ftp 服务器信息 （download，upload）


  sodu apt-get install tree openssh-server （这个是目录树功  能 ，我们已经安装过，不需要在安装了 ）
    
  如果本机和ssh服务器网络不通  客户端不能连接上

  ping 服务器IP地址可以测试和服务器网络是否通畅
  
  如果ssh服务器没有启动cat /etc/passwd 客户端不能连接上 调用指令   启动 service ssh
  start

SSH :
    为Secure Shell的缩写
    SSH 为建立在应用层和传输层基础上的安全协议。
    1.安装ssh服务器：
            sudo apt-get install openssh-server
    2.远程登录：
        ssh 用户名@IP

         SSH 告知用户，这个主机不能识别，这时键入"yes"，SSH 就会       将相关信息，写入" ~/.ssh/know_hosts" 中，再次访问，就不会       有这些信息了。然后输入完口令,就可以登录到主机了。


  
  IP地址
     win     ipconfig

     linux  ifconfig   
关机
    reboot 重启
    shutdown -r now 立即关机（远程操作的时候尽量不要输这个指令）
    shutdown -h 20：25   系统在今天的20:25 会关机 
    init 0   关机
    init 6   重启
 
vim：
    是一个文本编辑程序
    它可以执行输出、删除、查找、替换、块操作等众多文本操作，而且    用户可以根据自己的需要对其进行定制
    进入vim格式是：vim a.py ,如果不输入后面的文件名，则进入无名模                     式
vim 三种工作模式的基本切换：
	命令模式
	编辑模式 
	末行模式

  
  编辑模式（文本输入模式，插入模式）：
             进入插入模式:

    i: 插入光标前一个字符 

    I: 插入行首 

    a: 插入光标后一个字符 

    A: 插入行未 

    o: 向下新开一行,插入行首 

    O: 向上新开一行,插入行首
  
进入命令模式:

 ESC:从插入模式或末行模式进入命令模式

  移动光标:

    h: 左移 

    j: 下移 

    k: 上移 

    l: 右移

    M: 光标移动到中间行 

    L: 光标移动到屏幕最后一行行首 
    gg: 光标移动文件开头 

    G: 光标移动到文件末尾
  
  删除命令:
     x: 删除光标后一个字符,相当于 Del 

    X: 删除光标前一个字符,相当于 Backspace

    dd: 删除光标所在行,n dd 删除指定的行数 D: 删除光标后本行所有内容,包含光标所在字符 

    d0: 删除光标前本行所有内容,不包含光标所在字符

    dw: 删除光标开始位置的字,包含光标所在字符

  复制粘贴:

    yy: 复制当前行,n yy 复制 n 行 

    p: 在光标所在位置向下新开辟一行,粘贴


末行模式：
    在命令模式下，用户按“:”键即可进入末行模式下，此时Vi会在显示窗口的最后一行

            i或者a            ：
  文本模式--------命令模式 ---------末行模式
            Esc                Esc

 在末行模式下：wq 存盘退出
                q！不保存退出






vG 选定全部
dG 删除全部



